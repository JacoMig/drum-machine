{"version":3,"sources":["utils/util.js","Knob.js","Controls.js","FxSelector.js","FxSend.js","BottomButtons.js","utils/effects.js","Instrument.js","InstrumentRack.js","Step.js","Delay.js","Phaser.js","BitCrusher.js","FxCollector.js","DrumMachine.js","App.js","serviceWorker.js","index.js"],"names":["isTouchDevice","window","ontouchstart","Knob","props","startDrag","e","preventDefault","knob","target","getBoundingClientRect","pts","x","left","width","y","top","height","moveHandler","currentDeg","getDeg","touches","clientX","clientY","console","log","startAngle","newValue","Math","floor","convertRange","endAngle","min","max","setState","deg","onChange","document","addEventListener","removeEventListener","cX","cY","atan","PI","oldMin","oldMax","newMin","newMax","oldValue","renderTicks","ticks","incr","fullAngle","numTicks","size","margin","tick","tickStyle","transform","transformOrigin","push","dcpy","o","JSON","parse","stringify","degrees","value","state","kStyle","this","iStyle","oStyle","color","backgroundImage","random","className","style","map","i","key","onTouchStart","onMouseDown","React","Component","Bpm","styled","input","Controls","playStop","setPlayStop","setBpm","bpm","volume","setVolume","minVolume","useEffect","code","onClick","val","type","name","select","FxSend","fxName","setFx","useState","sendValue","setSendValue","sendValueREF","useRef","current","minVal","handleChangeKnob","Buttons","div","BottomButtons","mute","setMute","toggleInstrument","selected","FxTypes","delay","tone","Tone","FeedbackDelay","delayTime","feedback","params","phaser","Phaser","frequency","octaves","baseFrequency","bitCrusher","BitCrusher","bits","Instrument","buffer","setBuffers","maxVolume","volumeValue","setVolumeValue","channel","setChannel","Sound","setSound","channelSend","setChannelSend","Fx","channelRef","a","Channel","toMaster","Object","keys","send","Infinity","Buffer","process","Player","get","connect","loadingStuff","buffers","gain","handleChangeVolume","length","InstrumentRack","samples","currentInstrument","url","Step","steps","currentStep","toggleStep","s","FX_Wrapper","Rack","Delay","FX","setParams","paramsREF","receive","prop","decimals","Number","round","set","FxCollector","fx","open","setOpen","paramsObj","initialStepPattern","initialStepState","stepsObj","DrumMachine","setSteps","setCurrentStep","setCurrentInstrument","buffersRef","stepsRef","currentStepRef","Transport","scheduleRepeat","time","step","start","Limiter","stop","Master","index","App","appClasses","join","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.07c48c04.chunk.js","sourcesContent":["export function round(value, decimals) {\n    return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n   }   \n\nexport const isTouchDevice = () => {\n    return typeof window.ontouchstart !== 'undefined';\n}","import React from 'react'\nimport './knob.css'\nimport { isTouchDevice } from './utils/util';\n\nclass Knob extends React.Component {\n    constructor(props) {\n      super(props);\n      this.fullAngle = props.degrees;\n      this.startAngle = (360 - props.degrees) / 2;\n      this.endAngle = this.startAngle + props.degrees;\n      this.margin = props.size * 0.15;\n      this.currentDeg = Math.floor(\n        this.convertRange(\n          props.min,\n          props.max,\n          this.startAngle,\n          this.endAngle,\n          props.value\n        )\n      );\n      this.state = { deg: this.currentDeg };\n    }\n  \n    startDrag = e => {\n      e.preventDefault();\n      const knob = e.target.getBoundingClientRect();\n      const pts = {\n        x: knob.left + knob.width / 2,\n        y: knob.top + knob.height / 2\n      };\n      const moveHandler = e => {\n        \n        if(isTouchDevice()){\n          this.currentDeg = this.getDeg(e.touches[0].clientX, e.touches[0].clientY, pts);\n        }else {\n          this.currentDeg = this.getDeg(e.clientX, e.clientY, pts);\n        }\n        console.log(e.touches[0].clientX)\n        /* this.currentDeg = this.getDeg(e.clientX, e.clientY, pts); */\n        if (this.currentDeg === this.startAngle) this.currentDeg--;\n        let newValue = Math.floor(\n          this.convertRange(\n            this.startAngle,\n            this.endAngle,\n            this.props.min,\n            this.props.max,\n            this.currentDeg\n          )\n        );\n        this.setState({ deg: this.currentDeg });\n        this.props.onChange(newValue); \n      };\n\n      if(!isTouchDevice()){\n        document.addEventListener(\"mousemove\", moveHandler);\n        document.addEventListener(\"mouseup\", e => {\n          document.removeEventListener(\"mousemove\", moveHandler);\n        });\n      }else {\n        \n        document.addEventListener(\"touchmove\", moveHandler);\n        document.addEventListener(\"touchend\", e => {\n          document.removeEventListener(\"touchmove\", moveHandler);\n        });\n      }\n    };\n  \n    getDeg = (cX, cY, pts) => {\n      const x = cX - pts.x;\n      const y = cY - pts.y;\n      let deg = Math.atan(y / x) * 180 / Math.PI;\n      if ((x < 0 && y >= 0) || (x < 0 && y < 0)) {\n        deg += 90;\n      } else {\n        deg += 270;\n      }\n      let finalDeg = Math.min(Math.max(this.startAngle, deg), this.endAngle);\n      return finalDeg;\n    };\n  \n    convertRange = (oldMin, oldMax, newMin, newMax, oldValue) => {\n      return (oldValue - oldMin) * (newMax - newMin) / (oldMax - oldMin) + newMin;\n    };\n  \n    renderTicks = () => {\n      let ticks = [];\n      const incr = this.fullAngle / this.props.numTicks;\n      const size = this.margin + this.props.size / 2;\n      for (let deg = this.startAngle; deg <= this.endAngle; deg += incr) {\n        const tick = {\n          deg: deg,\n          tickStyle: {\n            height: size + 10,\n            left: size - 1,\n            top: size + 2,\n            transform: \"rotate(\" + deg + \"deg)\",\n            transformOrigin: \"top\"\n          }\n        };\n        ticks.push(tick);\n      }\n      return ticks;\n    };\n  \n    dcpy = o => {\n      return JSON.parse(JSON.stringify(o));\n    };\n  \n    render() {\n      let kStyle = {\n        width: this.props.size,\n        height: this.props.size\n      };\n      let iStyle = this.dcpy(kStyle);\n      let oStyle = this.dcpy(kStyle);\n      oStyle.margin = this.margin;\n      if (this.props.color) {\n        oStyle.backgroundImage =\n          \"radial-gradient(100% 70%,hsl(210, \" +\n          this.currentDeg +\n          \"%, \" +\n          this.currentDeg / 5 +\n          \"%),hsl(\" +\n          Math.random() * 100 +\n          \",20%,\" +\n          this.currentDeg / 36 +\n          \"%))\";\n      }\n      iStyle.transform = \"rotate(\" + this.state.deg + \"deg)\";\n  \n      return (\n        <div className=\"knob\" style={kStyle}>\n          <div className=\"ticks\">\n            {this.props.numTicks\n              ? this.renderTicks().map((tick, i) => (\n                  <div\n                    key={i}\n                    className={\n                      \"tick\" + (tick.deg <= this.currentDeg ? \" active\" : \"\")\n                    }\n                    style={tick.tickStyle}\n                  />\n                ))\n              : null}\n          </div>\n          <div className=\"knob outer\" style={oStyle} onTouchStart={this.startDrag} onMouseDown={this.startDrag}>\n            <div className=\"knob inner\" style={iStyle}>\n              <div className=\"grip\" />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n\n  export default Knob","import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport 'font-awesome/css/font-awesome.min.css'\nimport Knob from './Knob'\n\n\nconst Bpm = styled.input`\n  font-size: 25px;\n  text-align: left;\n  color: black;\n  padding: 5px;\n  max-width: 60px;\n`; \n\nconst Controls = ({playStop, setPlayStop, setBpm, bpm, volume, setVolume, minVolume}) => {\n    \n\n    useEffect(() => {\n        window.addEventListener('keydown', (e) => {\n            if(e.code === 'Space'){\n                setPlayStop()\n            }\n        })\n        \n        return () => {\n            window.removeEventListener('keydown', (e) => {\n                if(e.code === 'Space'){\n                    setPlayStop()\n                }\n            })\n        }\n    }, [])\n\n    /* useEffect(() => {\n        console.log(props.playStop)\n       \n    }, [props.playStop])  */\n\n    return (\n        <div className=\"controls\">\n            <button onClick={setPlayStop}>\n                {playStop ? <i className=\"fa fa-pause-circle-o\"></i> : <i className=\"fa fa-play-circle-o\"></i>}</button>\n            <div className=\"volume-controller\">\n                <label>Volume</label>\n                <Knob\n                    numTicks={10}\n                    degrees={220}\n                    min={0}\n                    max={64} \n                    value={volume}\n                    size={35}\n                    onChange={(val) => setVolume(minVolume + val)}\n                />\n            </div>\n            <div className=\"bpm-controller\">               \n                <label>Bpm</label>\n                <Bpm \n                    type=\"number\" \n                    value={bpm} \n                    min={50} \n                    max={220} \n                    name=\"bpm\" \n                    onChange={(e) => e.target.value <= 220 ? setBpm(e.target.value) : null } />\n            </div>\n        </div>\n    )\n}\n\nexport default Controls","import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\n\nconst Select = styled.select`\n    background: white;\n    position: relative;\n`\n\nconst FxSelector = ({setFx, FxTypes}) => {\n    \n    const [fxLabels, setFxLabels] = useState({})\n    \n    useEffect(() => {\n        setFxLabels(Object.keys(FxTypes).map(name => name))\n    }, [])\n\n    const handleChooseFx = (fxName) => {\n        if(fxName !== 'none')\n            setFx((state) => ({...state, [fxName]: 0 }))\n    }\n\n    return (\n        <>\n            {fxLabels.length > 0 &&\n                <Select defaultValue=\"none\" onChange={(e) => handleChooseFx(e.target.value)}>\n                    <option value=\"none\">Choose FX</option>\n                    {fxLabels.map(fx => <option key={fx} value={fx}>{fx}</option>)}\n                </Select>}\n        </>\n    )\n}\n\nexport default FxSelector","import React, { useEffect, useState, useRef } from 'react'\nimport Knob from './Knob'\n\nconst FxSend = ({fxName, setFx}) => {\n    const minVal = -80;\n    const [sendValue, setSendValue] = useState(0)\n    const sendValueREF = useRef(sendValue)\n    sendValueREF.current = sendValue\n\n    const handleChangeKnob = (val) => {\n        setSendValue(minVal + val)\n        setFx(state => ({ ...state, [fxName]: sendValueREF.current }) )\n    }\n\n    useEffect(() => {\n        setSendValue(0)\n        setFx(state => ({ ...state, [fxName]: minVal + sendValueREF.current }) )\n       // console.log(sendValueREF.current)\n    }, [])\n\n    useEffect(() => {\n        //console.log(sendValue)\n    })\n    \n    return (\n        <>\n            <div>\n                <span>{fxName}</span>\n                {/* <span onClick={() => removeFx(name)}>X</span> */}\n                <Knob\n                    numTicks={10}\n                    degrees={220}\n                    min={0}\n                    max={minVal*-1} \n                    value={sendValue}\n                    size={35}\n                    onChange={(val) => handleChangeKnob(val)}\n                />\n            </div>\n        </>\n    )\n}\n\n\nexport default FxSend","import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\n\nconst Buttons = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    justify-content: space-around;\n`\n\nconst BottomButtons = ({mute, setMute, selected, toggleInstrument}) => {\n    return (\n        <Buttons>\n            <button onClick={() => setMute(state => !state)} className={`button-mute ${mute ? 'mute' : ''}`}>M</button>\n            <button onClick={toggleInstrument} className=\"select-button\"></button>\n        </Buttons>\n    )\n}\n\nexport default BottomButtons","import Tone from 'tone'\n\nexport const FxTypes = {\n    delay: {\n        tone: new Tone.FeedbackDelay({delayTime: -0.1, feedback: -0.1}),\n        color: 'darkorange',\n        params: {\n            delayTime: 0,\n            feedback: 0\n        }\n    },\n    phaser: {\n        tone: new Tone.Phaser({ frequency : 0, octaves : 0, baseFrequency : 500}),\n        color: 'brown',\n        params: {\n            frequency: 0,\n            octaves: 0,\n        }\n    },\n    bitCrusher: {\n        tone: new Tone.BitCrusher({bits: 0}),\n        color: 'aqua',\n        params: {\n            bits: 0\n        }\n    }\n}","import React, { useEffect, useState, useRef } from 'react'\nimport Tone from 'tone'\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n// import {sounds} from './DrumMachine'\n// import Knob from './Knob'\n// import styled from 'styled-components'\nimport Nexus from 'nexusui'\nimport FxSelector from './FxSelector'\nimport FxSend from './FxSend'\nimport BottomButtons from './BottomButtons'\nimport {FxTypes} from './utils/effects'\nimport Knob from './Knob'\n\nconst Instrument = ({buffer, name, setBuffers, toggleInstrument, selected}) => {\n    const maxVolume = 30\n    const [volumeValue, setVolumeValue] = useState(maxVolume/2)\n    const [mute, setMute] = useState(false)\n    let [channel, setChannel] = useState()\n    let [Sound, setSound] = useState()\n    \n    let [channelSend, setChannelSend] = useState({})\n    let [Fx, setFx] = useState({})\n    \n    const channelRef = useRef(channel)\n    channelRef.current = channel\n\n    async function loadingStuff(){\n        /* Nexus._context = Tone.context\n        var meter = new Nexus.Meter(`#meter-${name}`,{\n            size: [130,200]\n        })\n        meter.colorize(\"fill\",\"gold\")  \n        meter.colorize(\"accent\",\"green\")    */\n        await setChannel(new Tone.Channel({volume: -2}).toMaster())\n        /*  meter.connect(channelRef.current, 2) */\n        if(channelRef.current){\n            channelRef.current.volume.value = volumeValue * -1\n        }\n        \n        Object.keys(FxTypes).map(FxSend => {\n            setFx((state) => ({...state, [FxSend]: 0 }))\n            setChannelSend(state => ({...state, [FxSend+name]: channelRef.current.send(FxSend, -Infinity)}))\n        })\n        const Buffer = new Tone.Buffer(process.env.PUBLIC_URL + buffer, () => {\n            setSound(new Tone.Player(Buffer.get()).connect(channelRef.current))\n        })\n        \n    }\n\n    useEffect(() => {\n        loadingStuff()\n    }, [])\n\n    useEffect(() => {\n        setBuffers(buffers => ({\n            ...buffers,\n            [name]:  Sound\n        }));\n    }, [Sound])  \n    \n    /* useEffect(() => {\n        \n    }) */\n\n    const handleChangeVolume = (val) => {         \n        setVolumeValue(val)\n       // console.log(val)\n    }\n\n    useEffect(() => {\n        if(channel){\n            !mute ? channel.volume.value = (maxVolume - volumeValue)*-1   : channel.volume.value = -100\n        } \n        \n    }, [volumeValue])\n\n    useEffect(() => {\n        if(channel){\n            mute ? channel.mute = mute : channel.volume.value = (maxVolume - volumeValue)*-1\n            // channel.mute = mute\n            // console.log(mute)\n        }\n    }, [mute])\n\n\n    useEffect(() => {\n        \n        Object.keys(Fx).map(FxSend => {\n            if(channelSend[FxSend+name]){\n                channelSend[FxSend+name].gain.value = Fx[FxSend]\n            }\n        })   \n        \n    }, [Fx]) \n\n    return (\n        <div className={`instrument ${selected ? 'selected' : ''}`}>\n            <div className={`${name}`}>\n                <p className=\"name\">{name}</p>\n                <div className=\"volume-knob\">\n                    <Knob\n                        numTicks={10}\n                        degrees={220}\n                        min={0}\n                        max={30} \n                        value={volumeValue}\n                        size={35}\n                        onChange={(val) => handleChangeVolume(val)}\n                    />\n                </div>\n                {/* <RangeSlider \n                        min={-60}\n                        max={8}\n                        value={volumeValue}\n                        tooltip={'off'}\n                        onChange={e => setVolumeValue(parseInt(e.target.value))} /> */}  \n                {/* <div id={`meter-${name}`}></div> */}\n\n                {/* <FxSelector \n                    FxTypes={FxTypes} \n                    setFx={setFx} /> */}\n\n                {Object.keys(Fx).length > 0 && \n                    <div className=\"sender\">\n                        {Object.keys(Fx).map(fxName => \n                            <FxSend \n                                key={fxName}\n                                fxName={fxName} \n                                setFx={setFx}\n                        /> )}\n                    </div>\n                }\n\n                <BottomButtons \n                    setMute={setMute} \n                    mute={mute} \n                    selected={selected} \n                    toggleInstrument={() => toggleInstrument(name)} />\n            </div>\n        </div>\n    )\n}\n\nexport default Instrument","import React from 'react'\n import Instrument from './Instrument'\n\n\nconst InstrumentRack = ({samples, setBuffers, toggleInstrument, currentInstrument}) => {\n//     const sounds = props.sounds\n   \n    return (\n        <div className=\"instrument-rack\">\n            {Object.keys(samples).map(name => {\n                // console.log(sounds[name])\n                return (\n                   <Instrument \n                        key={name} \n                        name={name} \n                        buffer={samples[name].url}\n                        setBuffers={setBuffers} \n                        toggleInstrument={toggleInstrument}\n                        selected={name === currentInstrument ? true : false} />   \n                )\n            })}\n        </div>    \n    )\n}\n\nexport default InstrumentRack","import React from 'react'\n\nconst Step = ({steps, currentStep, toggleStep, name}) => {\n    \n    return (\n        <div className=\"steps-line\">\n            {steps && steps.length > 0 && steps.map((s,i) => {\n               return <div \n                    key={name+'-'+i}\n                    className={`step ${s ? 'active' : ''} ${currentStep === i ? 'current' : ''}`}\n                    onMouseDown={() => toggleStep(i)}\n                    >\n                </div>\n            })}\n        </div>\n    )\n}\n\nexport default Step","import React, {useState, useEffect, useRef} from 'react'\nimport styled from 'styled-components'\nimport Knob from './Knob'\nimport {round} from './utils/util'\n\n\nconst FX_Wrapper = styled.div``\n\nconst Rack = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n`\n\nconst Delay = ({FX, params, setParams}) => {\n    const [name, setName] = useState(Object.keys(FX)[0])\n   \n    const paramsREF = useRef(params)\n    paramsREF.current = params\n   \n    useEffect(() => {\n        if(name){\n            FX[name].feedback.value = params.feedback;\n            FX[name].delayTime.value = params.delayTime;\n            FX[name].receive(name).toMaster()\n            console.log('Delay', name)\n        } \n        console.log(name, 'mount')\n        console.log(name+' params', params)\n        return (() => {\n            console.log(name, 'unmount')\n        })\n    }, [])\n\n    /* useEffect(() => {\n        if(name){\n            if(FX[name].delayTime)\n                FX[name].delayTime.value = 1 \n         \n            \n        }\n    }, [name]) */\n    \n    const handleChangeKnob = (val, prop) => {\n        \n        switch(prop){\n            case 'feedback':\n               \n                // setParams(state => ({...state, [name]: {...state[name], params: {...state[name].params, feedback: val/10} } }))\n                setParams(state => ( { ...state, [name]: { ...state[name], [prop]: val/10} } )) \n                FX[name].feedback.value = paramsREF.current[prop];\n            break;\n            case 'delayTime':\n               \n                // setParams(state => ({...state, [name]: {...state[name], params: {...state[name].params, delayTime: val/10.5} } }))\n                setParams(state => ( { ...state, [name]: { ...state[name], [prop]: round(val/10.5, 2)} } )) \n                FX[name].delayTime.value = 1 - paramsREF.current[prop];\n            break;\n        } \n        \n    }\n    \n    return (\n        <>\n            <FX_Wrapper className=\"fx-wrapper\">\n                <span>{name}</span>\n                <span onClick={() =>null}>X</span>\n                <Rack>\n                    <div>\n                        <h4>Feedback</h4>\n                        <Knob\n                            numTicks={8}\n                            degrees={220}\n                            min={0}\n                            max={10}\n                            value={params.feedback*10}\n                            size={35}\n                            onChange={(val) => handleChangeKnob(val, 'feedback')}\n                        />\n                    </div>\n                    <div>\n                        <h4>Delay Time</h4>\n                        <Knob\n                            numTicks={8}\n                            degrees={220}\n                            min={0}\n                            max={10}\n                            value={params.delayTime*10.5}\n                            size={35}\n                            onChange={(val) => handleChangeKnob(val, 'delayTime')}\n                        />\n                    </div>\n                </Rack>\n                \n            </FX_Wrapper>\n        </>\n    )\n}\n\nexport default Delay","import React, {useState, useEffect, useRef} from 'react'\nimport styled from 'styled-components'\nimport Knob from './Knob'\n\nconst Rack = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n`\n\nconst Phaser = ({FX, params, setParams}) => {\n    const [name, setName] = useState(Object.keys(FX)[0])\n   \n   \n    useEffect(() => {\n        if(name){\n            // FX[name].bits = maxVal - params.bits;\n            FX[name].set('frequency', params.frequency)\n            FX[name].set('octaves', params.octaves)\n            FX[name].receive(name).toMaster()\n        } \n        console.log(name, 'mount')\n        console.log(name+' params', params)\n        return (() => {\n            console.log(name, 'unmount')\n        })\n    }, [])\n\n   \n    \n    const handleChangeKnob = (val, prop) => {\n        switch(prop){\n            case 'frequency':\n               setParams(state => ( { ...state, [name]: { ...state[name], [prop]: val/10} } )) \n               FX[name].set('frequency', params[prop])\n            break;\n            case 'octaves':\n                setParams(state => ( { ...state, [name]: { ...state[name], [prop]: val} } ))\n                FX[name].set('octaves', params[prop])\n            break;\n        } \n    }\n    \n    return (\n        <>\n            <div className=\"fx-wrapper\">\n                <span>{name}</span>\n                <span onClick={() => null}>X</span>\n                <Rack>\n                    <div>\n                        <h4>Frequency</h4>\n                        <Knob\n                            numTicks={8}\n                            degrees={220}\n                            min={0}\n                            max={4000}\n                            value={params.frequency*10}\n                            size={35}\n                            onChange={(val) => handleChangeKnob(val, 'frequency')}\n                        />\n                    </div>\n                    <div>\n                        <h4>Octaves</h4>\n                        <Knob\n                            numTicks={8}\n                            degrees={220}\n                            min={0}\n                            max={8}\n                            value={params.octaves}\n                            size={35}\n                            onChange={(val) => handleChangeKnob(val, 'octaves')}\n                        />\n                    </div>\n                    {/* <div>\n                        <h4>Base Frequency</h4>\n                        <Knob\n                            numTicks={20}\n                            degrees={180}\n                            min={100}\n                            max={2000}\n                            value={values.baseFrequency}\n                            size={30}\n                            onChange={(val) => handleChangeKnob(val, 'baseFrequency')}\n                        />\n                    </div> */}\n                </Rack>\n            </div>\n            \n        </>\n    )\n}\n\nexport default Phaser","import React, {useState, useEffect, useRef} from 'react'\nimport styled from 'styled-components'\nimport Knob from './Knob'\n\n\n\nconst Rack = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n`\n\nconst BitCrusher = ({FX, params, setParams}) => {\n    const maxVal = 8\n    const [name, setName] = useState(Object.keys(FX)[0])\n    \n    const paramsREF = useRef(params)\n    paramsREF.current = params\n\n    useEffect(() => {\n        if(name){\n            FX[name].bits = maxVal - params.bits;\n            FX[name].receive(name).toMaster()\n        } \n        console.log(name, 'mount')\n        console.log(name+' params', params)\n        return (() => {\n            console.log(name, 'unmount')\n        })\n        \n    }, [])\n\n   \n    \n    const handleChangeKnob = (val) => {\n        setParams(state => ( { ...state, [name]: {bits: val} } ))\n        // console.log(paramsREF.current)\n        FX[name].bits = maxVal - paramsREF.current.bits;\n    }\n    \n    return (\n        <>\n            {/* console.log(values) */}\n        \n            <div className=\"fx-wrapper\">\n                <span>{name}</span>\n                <span onClick={() => null}>X</span>\n                <Rack>\n                    <div>\n                        <h4>Bits</h4>\n                        <Knob\n                            numTicks={8}\n                            degrees={220}\n                            min={0}\n                            max={8}\n                            value={params.bits}\n                            size={35}\n                            onChange={(val) => handleChangeKnob(val)}\n                        />\n                    </div>\n                </Rack>\n            </div>\n        \n        </>\n    )\n}\n\nexport default BitCrusher","import React, {useEffect, useState, useRef} from 'react'\n/* import styled from 'styled-components'\nimport Tone from 'tone'\nimport FX from './FX' */\nimport {FxTypes} from './utils/effects'\nimport Delay from './Delay'\nimport Phaser from './Phaser'\nimport BitCrusher from './BitCrusher'\n\n\nconst FxCollector = () => {\n    const [fx, setFx] = useState({})\n    const [params, setParams] = useState({})\n    const [open, setOpen] = useState(false)\n    \n    useEffect(() => {\n        setFx(FxTypes)\n        setParams(() => {\n            let paramsObj = {}\n            Object.keys(FxTypes).map(name => {\n                // FxTypes[name].tone.receive(name).toMaster()\n                paramsObj = {...paramsObj, [name]: {...FxTypes[name].params} }\n            })\n            return paramsObj\n        }) \n    }, [])\n\n    /* useEffect(() => {\n        if(Object.keys(fx).length > 0){\n            Object.keys(fx).map()\n        }\n    }, [fx]) */\n\n    useEffect(() => {\n       console.log(params)\n    }, [params])\n\n    return (\n        <>\n            <div className=\"fx-button\" onClick={() => setOpen(state => !state)}>\n                Effects\n            </div>\n            {open && Object.keys(fx).length > 0 &&\n                <div className=\"fx-collector-window\">\n                    {Object.keys(fx).map(name => \n                        {   \n                            if(name === 'delay'){\n                                return <Delay key={name} setParams={setParams} params={{...params[name]}} FX={{[name]: fx[name].tone}} >{name}</Delay>\n                            }else if(name === 'phaser') {\n                                return <Phaser key={name} setParams={setParams} params={{...params[name]}} FX={{[name]: fx[name].tone}} >{name}</Phaser>\n                            } if(name === 'bitCrusher'){\n                                return <BitCrusher key={name} setParams={setParams} params={{...params[name]}} FX={{[name]: fx[name].tone} } >{name}</BitCrusher>\n                            }\n                        }\n                    )}\n                </div>\n            }\n        </>\n    )\n}\n\n\nexport default FxCollector","import React, {useState, useEffect, useRef} from 'react'\nimport Tone from 'tone'\nimport Controls from './Controls'\nimport InstrumentRack from './InstrumentRack'\nimport samples from './samples.json'\nimport Step from './Step'\nimport FxCollector from './FxCollector'\n// import {round} from './utils/util'\nconst initialStepPattern = [false, false, false, false, false, false,false,false,false,false,false,false,false,false,false,false]\n\nconst initialStepState = () => {\n    let stepsObj = {}          \n    Object.keys(samples).map(key => {\n        stepsObj = {...stepsObj, [key]: initialStepPattern } \n    })\n    return stepsObj\n};  \n\nconst DrumMachine = () => {\n    \n    const [steps, setSteps] = useState(initialStepState) \n    const [currentStep, setCurrentStep] = useState(-1);\n    const [buffers, setBuffers] = useState({})\n    const [playStop, setPlayStop] = useState(false)\n    const [currentInstrument, setCurrentInstrument] = useState('kick')\n    const [bpm, setBpm] = useState(120)\n    const [volume, setVolume] = useState(30)\n    const minVolume = -40;\n\n    const buffersRef = useRef(buffers);\n    buffersRef.current = buffers;\n    const stepsRef = useRef(steps);\n    stepsRef.current = steps; \n    const currentStepRef = useRef(currentStep);\n    currentStepRef.current = currentStep;\n    \n    useEffect(() => {\n        Tone.Transport.scheduleRepeat(function(time) {\n            setCurrentStep(step => {\n                return step < 15 ? (step += 1) : 0;\n            }); \n            Object.keys(buffersRef.current).map(key => {\n                if(stepsRef.current[key][currentStepRef.current]){\n                    buffersRef.current[key].start(time)\n                } \n            })\n        }, \"16n\");\n        var limiter = new Tone.Limiter(-40).toMaster();\n        setVolume(minVolume + volume)\n    }, []);\n\n    const toggleStep = (i) => {\n        setSteps((step) => ({\n            ...steps,\n            [currentInstrument]: steps[currentInstrument].map((s,index) => index === i ? !s : s )    \n        }))\n    }\n\n    const toggleInstrument = (name) => {\n        setCurrentInstrument(name)\n    }\n\n    useEffect(() => {\n        playStop ? Tone.Transport.start() : Tone.Transport.stop()\n    }, [playStop]) \n\n    useEffect(() => {\n        Tone.Transport.bpm.value = bpm\n    },[bpm])\n\n    useEffect(() => {\n        Tone.Master.volume.value = volume\n      //  console.log(Tone.Master.volume.value)\n    },[volume])\n\n    useEffect(() => {\n      // console.log('steps', steps) \n    })\n\n    return (\n        <>\n            {/* console.log(currentStep) */}\n            <div className=\"main-body\">\n                <InstrumentRack \n                    samples={samples}\n                    setBuffers={setBuffers} \n                    toggleInstrument={toggleInstrument}\n                    currentInstrument={currentInstrument}\n                />\n                <div className=\"master\">\n                    <h3>Master</h3>\n                    <Controls \n                        setPlayStop={() => setPlayStop(state => !state)} \n                        playStop={playStop} \n                        setBpm={setBpm}\n                        bpm={bpm}\n                        volume={volume}\n                        minVolume={minVolume}\n                        setVolume={setVolume}\n                    />\n                    <FxCollector />\n                </div>\n            </div>\n            <div className=\"steps-sequencer\">\n                <div className=\"step-container\">\n                    <Step \n                        currentStep={currentStep}\n                        steps={steps[currentInstrument]} \n                        name={currentInstrument}\n                        toggleStep={(i) => toggleStep(i)} />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default DrumMachine","import React, {useState,  useEffect } from 'react';\nimport './App.css';\nimport DrumMachine from './DrumMachine';\nimport {isTouchDevice} from './utils/util';\n\nfunction App() {\n  \n  const [appClasses, setAppClasses] = useState([\"App\"]);\n  const [orientation, setOrientation] = useState('');\n  \n  const handleOrientation = () => {\n     return window.orientation === 90 ? 'landscape' : 'portrait'\n  }\n  \n  /* useEffect(() => {\n    if(isTouchDevice()) {\n       setAppClasses(state => [...state, \"mobile\"]);\n    }\n  }, []) */\n\n  return (\n    <div className={appClasses.join(\" \")}>\n      <DrumMachine />\n      <p>Drum Machine made with <strong>Tonejs</strong> and <strong>React</strong></p>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}